buildscript {
    repositories {
        jcenter();
        mavenCentral();
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1';
        classpath 'de.gliderpilot.gradle.semantic-release:gradle-semantic-release-plugin:1.3.1';
        // generates
        classpath "gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:1.4.17"
        // classpath "gradle.plugin.com.prot.versioninfo:jar-version-info-gradle-plugin:0.4"
    }
}

apply plugin: 'java'
apply plugin: 'com.bmuschko.nexus'
apply plugin: 'de.gliderpilot.semantic-release'
apply plugin: "com.gorylenko.gradle-git-properties"

group = "cl.daplay"
description = "An idiomatic Java API for Surbtc REST services."

targetCompatibility = '1.8'
sourceCompatibility = '1.8'

task generateVersionFile {
    description = 'Generates file "version.properties".'

    doLast {
        def out = new File(project.buildDir, "resources/main/version.properties")

        def props = new Properties()
        props.setProperty('version', project.version.toString())

        props.store(out.newWriter(), null)
    }
}

processResources.finalizedBy generateVersionFile

javadoc {
    doLast {
        // contents of "gtag.js" file will be inserted after every head
        String gtag = file("gtag.js").text

        // for each html
        def files = fileTree(destinationDir).include('**/*.html')
        files.each { file ->
            def content = file.text

            def indexOfHead = content.indexOf("<head>");
            if (indexOfHead) {
                // determines post of insertion (just after head element)
                def insertIndex = indexOfHead + "<head>".length()

                // replace file
                file.text = new StringBuilder(content).insert(insertIndex, gtag).toString()
            }
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.8.9'
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk8', version: '2.8.9'
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.8.9'

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

test {
    testLogging.showStandardStreams = true

    final boolean skipIntegration = project.hasProperty('skipIntegration') && Boolean.parseBoolean(project.getProperty('skipIntegration'));
    final boolean integrationConfiguration = project.hasProperty('jsurbtc.secret') && project.hasProperty('jsurbtc.key')

    if (skipIntegration || !integrationConfiguration) {
        exclude { it.name.endsWith('_IT.class') }
    }
}

modifyPom {
    project {

        name project.name
        description project.description
        url 'https://github.com/daplay/jsurbtc'

        scm {
            url 'https://github.com/daplay/jsurbtc'
            connection 'scm:https://github.com/daplay/jsurbtc.git'
            developerConnection 'scm:git://github.com/daplay/jsurbtc.git'
        }

        licenses {
            license {
                name 'The Apache Software License, Version 2.0'
                url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            }
        }

        developers {
            developer {
                id 'daplay'
                name 'Daniel Meneses'
                email 'daplay@gmail.com'
            }
        }
    }
}
